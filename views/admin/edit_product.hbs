<aside class="navbar-aside" id="offcanvas_aside">
    <div class="aside-top">
        <a href="/admin/home" class="brand-wrap">
            <img src="/assetsAdmin/imgs/theme/logo.svg" class="logo" alt="Evara Dashboard">
        </a>
        <div>
            <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i>
            </button>
        </div>
    </div>
    <nav>
        <ul class="menu-aside">
            <li class="menu-item ">
                <a class="menu-link" href="/admin/home"> <i class="icon material-icons md-home"></i>
                    <span class="text">Dashboard</span>
                </a>
            </li>
            <li class="menu-item active">
                <a class="menu-link" href="/admin/product"> <i class="icon material-icons md-shopping_bag"></i>
                    <span class="text">Products</span>
                </a>

            </li>
            <li class="menu-item ">
                <a class="menu-link" href="/admin/orders"> <i class="icon material-icons md-shopping_cart"></i>
                    <span class="text">Orders</span>
                </a>

            </li>
            <li class="menu-item ">
                <a class="menu-link" href="/admin/category"> <i class="icon material-icons md-category"></i>
                    <span class="text">Category</span>
                </a>

            </li>
            

             <li class="menu-item ">
                    <a class="menu-link" href="/admin/coupons"><i class="icon fa-solid fa-ticket"></i>
                        <span class="text">Coupons</span>
                    </a>
      </li>
            <li class="menu-item">
                <a class="menu-link" href="/admin/manage_users"> <i class="icon material-icons md-person"></i>
                    <span class="text">Users</span>
                </a>

            </li>
                         <li class="menu-item">
                    <a class="menu-link" href="/admin/productOffers"> <i class="icon material-icons md-local_offer"></i>
                        <span class="text"> productOffers </span>
                    </a>
                </li>
                     <li class="menu-item">
                <a class="menu-link" href="/admin/categoryOffers"> <i class="icon material-icons md-comment"></i>
                    <span class="text"> categoryOffers </span>
                </a>
            </li>
            <li class="menu-item ">
                {{!-- <a class="menu-link" href="/admin/brands"> <i class="icon material-icons md-stars"></i>
                    <span class="text">Brands</span> </a> --}}
            </li>
            <li class="menu-item ">
                {{!-- <a class="menu-link" href="/admin/brands"> <i class="icon material-icons md-stars"></i>
                    <span class="text">Brands</span> </a> --}}
            </li>
        </ul>
        <hr>
        <ul class="menu-aside">
            <li class="menu-item ">
                <a class="menu-link" href="#"> <i class="icon material-icons md-settings"></i>
                    <span class="text">Settings</span>
                </a>
            </li>
            <li class="menu-item">
                <a class="menu-link btn btn-primary" href="/admin/logout"> <i
                        class="icon material-icons md-exit_to_app"></i>
                    Logout
                </a>
            </li>
        </ul>
        <br>
        <br>
    </nav>
</aside>

<main class="main-wrap">

    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Edit Product</h2>
                </div>
            </div>
            <div class="col-lg-12">
                <div class="card mb-4">
                    <div class="card-header">
                        <h4>Basic</h4>
                    </div>
                    <div class="card-body">
                        <form method="post" class="form-add-product" action="/admin/update_product/{{proData._id}}"
                            enctype="multipart/form-data" onsubmit="return Validation()">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" value="{{proData.name}}" placeholder="Type here" name="name"
                                    class="form-control" id="productName"   >
                                    <h6 class="alertAddProduct mt-1" style="color: red" id="productNameAlert"></h6>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <input class="form-control" id="longdescription" 
                                    name="description" rows="3"
                                    value="{{proData.description}}" ></input>
                                    <h6 class="alertAddProduct mt-1" style="color: red" id="longAlert"></h6>

                                    
                            </div>
                            <div class="row">
                                <div class="col-lg-3">
                                    <div class="mb-4">
                                        <label class="form-label">Price</label>
                                        <div class="row gx-2">
                                            <input placeholder="$" type="text" value="{{proData.price}}" id="price"
                                                name="price" class="form-control">
                                        </div>
                                         <h6 class="alertAddProduct mt-1" style="color: red" id="priceAlert"></h6>

                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-4">
                                        <label class="form-label">Stock</label>
                                        <input name="stock" value="{{proData.stock}}" class="form-control"
                                            placeholder="Quantity" type="text" id="Qty">
                                    </div>
                                    <h6 class="alertAddProduct mt-1" style="color: red" id="qtyAlert"></h6>
                                </div>
                                <div class="col-lg-3">
                                    <label class="form-label">Category:</label>
                                    <select name="category" id="category" class="form-select">
                                        {{#each catogories}}
                                        <option value="{{this._id}}">{{this.category}}</option>
                                        {{/each}}
                                    </select>
                                </div>


                                

                            </div>
                            <div class="form-group">
        <label for="productImage">Product Image:</label>
        <div class="d-flex border p-10 m-tb-10">
          <input name="product-id" type="hidden" value="{{proData._id}}">
          {{#each proData.imageUrl}}
          <div class="image-container" onclick="deleteProImg()">
            <div  class="badge rounded-pill alert-danger "><p  class="close-button" data-image-index="{{@index}}"
              style="text-decoration: none;">×</p></div>
            <img src="/images/products/{{this}}" alt="images" style="width: 80px; height: auto;" class="m-2 pro-image"
              data-image-index="{{@index}}">
          </div>

          {{/each}}
        </div>
        <input type="file" class="form-control-file" id="productImage" multiple name="image">
      </div> <h6 id="imgAlert" class=" mt-2" style="color: red;"></h6>



                            <div class="d-flex g-2">
                                <div class="m-2">
                                    <button type="submit" class="btn btn-primary">Edit Product</button>

                                </div>
                                <div class="m-2">
                                    <a href="/admin/product" type="button" class="btn btn-primary" id="backbutton">Back</a>

                                </div>


                            </div>
                        </form>
                    </div>
                </div> <!-- card end// -->



            </div>
    </section> <!-- content-main end// -->
    <footer class="main-footer font-xs">
        <div class="row pb-30 pt-15">
            <div class="col-sm-6">
                <script>
                    document.write(new Date().getFullYear())
                </script> ©, Evara - HTML Ecommerce Template .
            </div>
            <div class="col-sm-6">
                <div class="text-sm-end">
                    All rights reserved
                </div>
            </div>
        </div>
    </footer>
</main>

<script>

function Validation() {
        var errors = []; // Array to store validation errors

        var fileInput = document.getElementById('file-1');
        var previewImage = document.getElementById('file-1-preview').querySelector('img');

        let productName = document.getElementById("productName").value;

        let longdescription = document.getElementById("longdescription").value;
        //let Qty = document.getElementById("Qty").value;
        let price = document.getElementById("price").value;



        let productNameRegex = /^\s*.\S.\s*$/;
        let number = /^[1-9]\d*$/;
        let descriptionRegex = /^(?!\s*$)[\s\S]{1,100}$/




        let productNameAlert = document.getElementById("productNameAlert");
        // let qtyAlert = document.getElementById("qtyAlert");
        let priceAlert = document.getElementById("priceAlert");


        let longAlert = document.getElementById("longAlert");
        let imgAlert = document.getElementById('imgAlert')

       if (!productName.match(productNameRegex)) {
        errors.push("Name Not Valid");
    }

    //if (!Qty.match(number)) {
      //  errors.push("Please Check Qty Again");
    //}

    if (!price.match(number)) {
        errors.push("Please Check Price Again");
    }

    if (!longdescription.match(descriptionRegex)) {
        errors.push("Please Check about Again");
    }

    if (fileInput.files.length === 0) {
        errors.push("Please choose an image");
    }

    // Display all error messages
    if (errors.length > 0) {
        productNameAlert.innerHTML = errors.includes("Name Not Valid") ? "Name Not Valid" : "";
        //qtyAlert.innerHTML = errors.includes("Please Check Qty Again") ? "Please Check Qty Again" : "";
        priceAlert.innerHTML = errors.includes("Please Check Price Again") ? "Please Check Price Again" : "";
        longAlert.innerHTML = errors.includes("Please Check about Again") ? "Please Check about Again" : "";
        imgAlert.innerHTML = errors.includes("Please choose an image") ? "Please choose an image" : "";

        return false; // Prevent form submission
    }

    return true; // Allow form submission if no errors
    }


//const deleteImage = async (productId, imageName) => {
    //try {
      //  const response = await fetch(`/admin/product_img_delete?id=${productId}&image=${imageName}`, {
       //     method: "DELETE",
       // });
       // const result = await response.json();

       // if (response.ok) {
        //    setImages(result.updatedImages); // Update UI
       //     alert("Image deleted successfully!");
       // } else {
        //    alert(result.error || "Failed to delete image");
       // }
   // } catch (error) {
      //  console.error("Error:", error);
    //}
//};





  //const deleteProImg = () => {

    //const deleteButtons = document.querySelectorAll('.close-button')
    //const productId = document.getElementsByName('product-id')[0].value

    //deleteButtons.forEach((button )=> {
      //button.addEventListener('click', async (event) => {
      //  const imageIndex = event.target.dataset.imageIndex;
    //    deleteImage(productId, imageIndex);
   //   });
   // });

  //} 


//changes
//It works for removing the image

const deleteImage = async (productId, imageName, imageElement) => {
  try {
    // Send the DELETE request to the server
    const response = await fetch(`/admin/product_img_delete?id=${productId}&image=${imageName}`, {
      method: 'DELETE',
    });

    const result = await response.json();

    if (response.ok) {
      alert("Image deleted successfully!");
      
      // Remove the image from the DOM (fade out or directly remove)
      imageElement.parentElement.style.transition = 'opacity 0.5s';
      imageElement.parentElement.style.opacity = '0';  // Fade out
      setTimeout(() => {
        imageElement.parentElement.remove();  // Remove from DOM after fade
      }, 500);
      
      // Optionally, update the image list if you have it displayed elsewhere
      updateImageUI(result.updatedImages); // Update the images UI if required
    } else {
      alert(result.error || "Failed to delete image");
    }
  } catch (error) {
    console.error("Error:", error);
  }
};

// Event listener for delete buttons
const deleteProImg = () => {
  const deleteButtons = document.querySelectorAll('.close-button');
  const productId = document.getElementsByName('product-id')[0].value;

  deleteButtons.forEach((button) => {
    button.addEventListener('click', async (event) => {
      // Get the image name from the src or any relevant attribute
      const imageName = event.target.closest('.image-container').querySelector('img').src.split('/').pop();
      const imageElement = event.target.closest('.image-container').querySelector('img');
      
      // Call the delete function and pass the image element to remove it immediately
      await deleteImage(productId, imageName, imageElement);
    });
  });
};



    function Validation() 
    {

       
        let productName = document.getElementById("productName").value;

        let longdescription = document.getElementById("longdescription").value;
        let Qty = document.getElementById("Qty").value;
        let price = document.getElementById("price").value;



        let productNameRegex = /^\s*.*\S.*\s*$/;
        let number = /^[1-9]\d*$/;
        let descriptionRegex = /^(?!\s*$)[\s\S]{1,100}$/




        let productNameAlert = document.getElementById("productNameAlert");
        let qtyAlert = document.getElementById("qtyAlert");
        let priceAlert = document.getElementById("priceAlert");


        let longAlert = document.getElementById("longAlert");
        let imgAlert = document.getElementById('imgAlert')

        if (!productName.match(productNameRegex)) {
            productNameAlert.innerHTML = "Name Not Valid";
            return false;
        } //else if (!Qty.match(number)) {
            //qtyAlert.innerHTML = "Please Check Qty Again";
            //return false;
            //} 
        else if (!price.match(number)) {
            priceAlert.innerHTML = "Please Check Price Again";
            return false;
        }

        else if (!longdescription.match(descriptionRegex)) {
            longAlert.innerHTML = "Please Check about Again";
            return false;
        }

        else {
            return true;
        }

    }

    function validate_productName() {
        var productNameInput = document.getElementById("productName");
        var product = productNameInput.value.trim();
        var pattern = /^[a-zA-Z0-9\s]{3,}$/;

        if (!pattern.test(product)) {
            alert("Invalid product name. Please try again.");
            productNameInput.value = ''; // Clear the input field
            productNameInput.focus();    // Set focus back to the input field
            return false;
        } else {
            return true;
        }


    }


    
    function validate_productName() {
        var productNameInput = document.getElementById("productName");
        var product = productNameInput.value.trim();
        var pattern = /^[a-zA-Z0-9\s]{3,}$/;

        if (!pattern.test(product)) {
            alert("Invalid product name. Please try again.");
            productNameInput.value = ''; // Clear the input field
            productNameInput.focus();    // Set focus back to the input field
            return false;
        } else {
            return true;
        }


    }


    function validate_description() {

        var longdescriptionInput = document.getElementById("longdescription");
        var longdescription = longdescriptionInput.value.trim();


        if (longdescription === "") {
            alert("Invalid description . Please try again.");
            longdescriptionInput.value = ''; // Clear the input field
            longdescriptionInput.focus();    // Set focus back to the input field
            return false;
        } else {
            return true;
        }

    }

    

   
</script>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    ////////////back
    $(document).ready(function () {
        $('#backbutton').click(function (e) {
            e.preventDefault();


            Swal.fire({
                title: "Leave the page?",
                text: "The Data will not be saved",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#088178",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = "/admin/product";

                }
            });


        });
    });
</script>