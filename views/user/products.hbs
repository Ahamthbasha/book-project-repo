<style>
/* CSS for highlighted filter option */
/* CSS for highlighted filter option */
.highlight {
    background-color: #A8D5BA; /* Pale green color */
    color: white; /* Text color */
    font-weight: bold; /* Make the text bold */
    padding: 5px 10px; /* Add padding around the text */
    border-radius: 5px; /* Rounded corners for the background */
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); /* Soft shadow to give depth */
    transition: all 0.3s ease; /* Smooth transition for hover and click */
}

/* Optional: Add hover effect for extra interactivity */
.highlight:hover {
    background-color: #8FBC8F; /* Darker green for hover effect */
    transform: scale(1.05); /* Slight zoom-in effect on hover */
}


</style>
<main class="main">
    <!-- Breadcrumb -->
    <div class="page-header breadcrumb-wrap">
        <div class="container">
            <div class="breadcrumb">
                <a href="/" rel="nofollow">Home</a>
                <span></span> Shop
            </div>
        </div>
    </div>

    <section class="mt-50 mb-50">
        <div class="container">
            <div class="row flex-row-reverse">
                <div class="col-lg-9">
                    <!-- Product Filter Section -->
                    <div class="shop-product-fillter">
                        <div class="totall-product">
                            <p>We found <strong class="text-brand" id="count">{{proCount}}</strong> items for you!</p>
                        </div>
                        <div class="sort-by-product-area">
                            <div class="sort-by-cover mr-10">
                                <div class="sort-by-product-wrap">
                                    <div class="sort-by">
                                        <span><i class="fi-rs-apps"></i> Show</span>
                                    </div>
                                    <div class="sort-by-dropdown-wrap">
                                        <span> <i class="fi-rs-angle-small-down"></i></span>
                                    </div>
                                </div>
                                <div class="sort-by-dropdown">
                                    <ul>
                                        <li><a onclick="limits(1)">1</a></li>
                                        <li><a onclick="limits(3)">3</a></li>
                                        <li><a onclick="limits(6)">6</a></li>
                                        <li><a onclick="limits(9)">9</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Product List Section -->
                    <div id="pro_container">
                        <div class="row product-grid-4">
    {{#each proData}}
    <div class="col-lg-3 col-md-4 col-12 col-sm-6">
        <div class="product-cart-wrap mb-30">
            <div class="product-img-action-wrap">
                <div class="product-img product-img-zoom">
                    <a href="/productview?id={{this._id}}">
                        <img class="default-img" src="/images/products/{{this.imageUrl.[0]}}" alt="">
                        <img class="hover-img" src="/images/products/{{this.imageUrl.[1]}}" alt="">
                    </a>
                </div>
                
                <div class="product-badges product-badges-position product-badges-mrg">
                    <span class="hot">Hot</span>
                </div>
            </div>
            <div class="product-content-wrap">
                <div class="product-category">
                    <a>{{this.category.category}}</a>
                </div>
                <h2><a href="/productDetails/{{this._id}}">{{this.name}}</a></h2>
                <div class="rating-result" title="90%">
                    <span>
                        <span>90%</span>
                    </span>
                </div>
                <div class="product-price">
                    <span>₹{{this.discountedPrice}}</span>
                    {{#if this.offerAvailable}}
                    <span class="old-price">₹{{this.price}}</span>
                    <span class="offer-status">Offer Available</span>
                    {{/if}}
                </div>
                <div class="product-action-1 show">
                </div>
            </div>
        </div>
    </div>
    {{/each}}
</div>

                    </div>

                    <!-- Pagination Section -->
                    <div class="pagination-area mt-15 mb-sm-5 mb-lg-0">
                        <nav aria-label="Page navigation example">
                            <ul class="pagination justify-content-start" id="paginationList">
                                {{#each pages}}
                                    <li class="page-item {{#ifEquals this ../currentPage}}active{{/ifEquals}}">
                                        <a class="page-link" href="javascript:{{../currentFunction}}('{{../catId}}', {{this}}, '{{../currentSort}}');">{{this}}</a>
                                    </li>
                                {{/each}}
                            </ul>
                        </nav>
                    </div>
                </div>

                <!-- Sidebar Section -->
                <div class="col-lg-3 primary-sidebar sticky-sidebar">
                    <!-- Category Filter -->
                    <div class="widget-category mb-30">
                        <h5 class="section-title style-1 mb-30 wow fadeIn animated">Category</h5>
                        <ul class="categories">
                            {{#each loadCatData}}
                                <li><a href="javascript:void(0)" onclick="filterByCategory('{{this._id}}')">{{this.category}}</a></li>
                            {{/each}}
                        </ul>
                    </div>

                    <!-- Sort Filter -->
                    <div class="widget-category mb-30">
                        <h5 class="section-title style-1 mb-30 wow fadeIn animated">Sort</h5>
                        <ul>
                            <li><a href="javascript:void(0)" onclick="sortLowToHigh()">Price: Low to High</a></li>
                            <li><a href="javascript:void(0)" onclick="sortHighToLow()">Price: High to Low</a></li>
                            <li><a href="javascript:void(0)" onclick="sortAZ()">A - Z</a></li>
                            <li><a href="javascript:void(0)" onclick="sortZA()">Z - A</a></li>
                            <br>
                            <a onclick="clearfilter()" class="btn btn-sm btn-default"><i class="fi-rs-filter mr-5"></i> Clear Filter</a>
                        </ul>
                    </div>

                    <!-- New Arrivals Section -->
                    <div class="sidebar-widget product-sidebar  mb-30 p-30 bg-grey border-radius-10">
                        <div class="widget-header position-relative mb-20 pb-10">
                            <h5 class="widget-title mb-10">New arrivals</h5>
                            <div class="bt-1 border-color-1"></div>
                        </div>
                        {{#each newProduct}}
                            <div class="single-post clearfix" id="newProduct">
                                <div class="image">
                                    <img src="/images/products/{{imageUrl.[0]}}" alt="{{name}}">
                                </div>
                                <div class="content pt-10">
                                    <h5><a href="/productview?id={{this._id}}">{{name}}</a></h5>
                                    <p class="price mb-0 mt-5">₹{{price}}</p>
                                    <div class="product-rate">
                                        <div class="product-rating" style="width:90%"></div>
                                    </div>
                                </div>
                            </div>
                        {{/each}}
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

<!-- JQuery and Sweetalert Scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    let currentPage = 1;
    let currentSort = '';
    let currentCategory = '';
    let searchQuery = '';
    let limit = 9;

    const fetchProducts = () => {
        $.ajax({
            url: '/search',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                searchQuery,
                sortOption: currentSort,
                categoryFilter: currentCategory,
                page: currentPage,
                limit,
            }),
            success: (data) => {
                updateProductList(data.products);
                updatePagination(data.totalProducts);
                updateProductCount(data.totalProducts);
            },
            error: (error) => {
                console.error('Error fetching products:', error);
            },
        });
    };

  const updateProductList = (products) => {
    const productList = $('#pro_container .row.product-grid-4');
    productList.empty(); // Clear previous products

    if (products.length === 0) {
        productList.html('<h2 class="m-5">No product available</h2>');
        return;
    }

    products.forEach((product) => {
        const productHtml = `
            <div class="col-lg-3 col-md-4 col-12 col-sm-6">
                <div class="product-cart-wrap mb-30">
                    <div class="product-img-action-wrap">
                        <div class="product-img product-img-zoom">
                            <a href="/productDetails/${product._id}">
                                <img class="default-img" src="/images/products/${product.imageUrl[0]}" alt="">
                                <img class="hover-img" src="/images/products/${product.imageUrl[1]}" alt="">
                            </a>
                        </div>
                        <div class="product-action-1">
                            <a aria-label="Quick view" class="action-btn hover-up" href="/productDetails/${product._id}" data-bs-target="#quickViewModal">
                                <i class="fi-rs-search"></i>
                            </a>
                            <a data-id="${product._id}" aria-label="Add To Wishlist" class="wish action-btn hover-up" href="#">
                                <i class="fi-rs-heart"></i>
                            </a>
                        </div>
                        <div class="product-badges product-badges-position product-badges-mrg">
                            <span class="hot">Hot</span>
                        </div>
                    </div>
                    <div class="product-content-wrap">
                        <div class="product-category">
                            <a href="shop-grid-right.html">${product.category.category}</a>
                        </div>
                        <h2><a href="/productDetails/${product._id}">${product.name}</a></h2>
                        <div class="rating-result" title="90%">
                            <span><span>90%</span></span>
                        </div>
                        <div class="product-price">
                            ${
                                product.discountPrice && product.discountPrice < product.price
                                    ? `<span>₹${product.discountPrice}</span>
                                       <span class="old-price">₹${product.price}</span>
                                       <span >offer Available</span>` 
                                    : `<span>₹${product.price}</span>`
                            }
                        </div>
                        <div class="product-action-1 show"></div>
                    </div>
                </div>
            </div>
        `;

        // Append to product list
        productList.append(productHtml);
    });
};

    const updatePagination = (totalProducts) => {
        const paginationList = $('#paginationList');
        paginationList.empty();
        const totalPages = Math.ceil(totalProducts / limit);

        for (let i = 1; i <= totalPages; i++) {
            const activeClass = i === currentPage ? 'active' : '';
            const pageItem = `
                <li class="page-item ${activeClass}">
                    <a class="page-link" href="javascript:goToPage(${i});">${i}</a>
                </li>
            `;
            paginationList.append(pageItem);
        }
    };

    const updateProductCount = (totalProducts) => {
        $('#count').text(totalProducts);
    };

    const goToPage = (page) => {
        currentPage = page;
        fetchProducts();
    };

    const searchProducts = () => {
        searchQuery = $('#searchInput').val();
        currentPage = 1;
        fetchProducts();
    };
    function clearHighlights() {
    const filterLinks = document.querySelectorAll('.categories li a, .widget-category ul li a');
    filterLinks.forEach(link => {
        link.classList.remove('highlight');
    });
}

// Function to filter by category
function filterByCategory(categoryId) {
    console.log('Filtering by category:', categoryId); // Debugging line
    clearHighlights(); // Clear previous highlights
    const selectedLink = document.querySelector(`a[onclick="filterByCategory('${categoryId}')"]`);
    if (selectedLink) {
        selectedLink.classList.add('highlight'); // Highlight the selected category
    }
    currentCategory = categoryId; // Set the current category
    currentPage = 1;
    fetchProducts(); // Re-fetch the products with the updated filter
}

// Function to sort low to high
function sortLowToHigh() {
    console.log('Sorting: Low to High'); // Debugging line
    clearHighlights(); // Clear previous highlights
    const selectedLink = document.querySelector('a[onclick="sortLowToHigh()"]');
    if (selectedLink) {
        selectedLink.classList.add('highlight'); // Highlight the selected sort option
    }
    currentSort = 'priceAsc'; // Set the sort option
    currentPage = 1;
    fetchProducts(); // Re-fetch the products with the updated sort
}

// Function to sort high to low
function sortHighToLow() {
    console.log('Sorting: High to Low'); // Debugging line
    clearHighlights(); // Clear previous highlights
    const selectedLink = document.querySelector('a[onclick="sortHighToLow()"]');
    if (selectedLink) {
        selectedLink.classList.add('highlight'); // Highlight the selected sort option
    }
    currentSort = 'priceDesc'; // Set the sort option
    currentPage = 1;
    fetchProducts(); // Re-fetch the products with the updated sort
}

// Function for A-Z sorting
function sortAZ() {
    console.log('Sorting: A - Z'); // Debugging line
    clearHighlights(); // Clear previous highlights
    const selectedLink = document.querySelector('a[onclick="sortAZ()"]');
    if (selectedLink) {
        selectedLink.classList.add('highlight'); // Highlight the selected sort option
    }
    currentSort = 'nameAsc'; // Set the sort option
    currentPage = 1;
    fetchProducts(); // Re-fetch the products with the updated sort
}

// Function for Z-A sorting
function sortZA() {
    console.log('Sorting: Z - A'); // Debugging line
    clearHighlights(); // Clear previous highlights
    const selectedLink = document.querySelector('a[onclick="sortZA()"]');
    if (selectedLink) {
        selectedLink.classList.add('highlight'); // Highlight the selected sort option
    }
    currentSort = 'nameDesc'; // Set the sort option
    currentPage = 1;
    fetchProducts(); // Re-fetch the products with the updated sort
}

    const limits = (ct) => {
        limit = ct;
        currentPage = 1;
        fetchProducts();
    };

   function clearfilter() {
    clearHighlights(); // Clear all highlights
    currentPage = 1;
    currentSort = '';
    currentCategory = '';
    searchQuery = '';
    limit = 6;
    fetchProducts(); // Re-fetch products without any filters
}
    // Initial call to fetch products when page loads
    fetchProducts();

    // Wishlist action
    $(document).ready(function () {
        const userId = "";  // Make sure this is assigned correctly or removed if not needed

        $('#productList').on('click', '.wish.action-btn', function (event) {
            event.preventDefault();
            var $button = $(this);
            var id = $button.data('id');

            $.ajax({
                type: 'POST',
                url: '/addtowishlist',
                contentType: 'application/json',
                data: JSON.stringify({ id: id, userId: userId }),
                success: function (productData) {
                    if (productData.success) {
                        Swal.fire({
                            title: 'Success!',
                            text: 'Product Successfully added to Wishlist!!!',
                            icon: 'success',
                            confirmButtonText: 'Cool'
                        });
                    } else {
                        if (productData.message) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops',
                                text: productData.message,
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Login Required',
                                showCancelButton: true,
                                confirmButtonText: 'Login',
                                confirmButtonColor: "#088178",
                                cancelButtonColor: "#d33",
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = '/login';
                                }
                            });
                        }
                    }
                },
                error: function (error) {
                    console.log('Error adding to wishlist', error);
                }
            });
        });
    });
</script>
